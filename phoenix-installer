#!/bin/bash

# This is not intended to be a working script, it is mearly an example of what developers can do

f.prepminer(){
  echo "Getting Miner"
  echo "Move to a temporary work space"
  mkdir /tmp/newminer
  cd /tmp/newminer
  
  echo "Getting latest release of miner"
  curl -s https://api.github.com/repos/cynixx3/third-party-miner-installer-for-ethos/releases/latest \
  | grep "browser_download_url.*tar\.gz" \
  | cut -d '"' -f 4 \
  | head -1 \
  | wget -qi - -O PhoenixMiner.tar.gz
  echo "Comparing download with checksum"
  echo "354307c366d32b37793022aced287f6a76dc1037e98ab18d1af400bc532ba0d2 PhoenixMiner.tar.gz" | sha256sum -c 
  if [ "$?" -ne "0" ]; then echo "checksum of downloaded files failed, please try again";exit 0; fi
  
  echo "Unpacking miner"
  tar xzf PhoenixMiner.tar.gz -C phoenixminer
  if [ "$?" != "0" ]; then
    echo "Unable to extract files package. please try again."
    exit 0
  fi
  
  mkdir -p opt/miners
  rsync -a --delete phoenixminer opt/miners/phoenixminer
  
  echo "Temporary miner files ready"
}

f.checkdpkg(){
  DPKGLOCKED=$(lsof /var/lib/dpkg/lock 2>/dev/null | grep -c "/var/lib/dpkg/lock")
  WAITCOUNT="0"
  if [ "$DPKGLOCKED" -ge "1" ]; then
    until [ "$DPKGLOCKED" = "0" ] || [ "$WAITCOUNT" = "60" ]; do
      DPKGLOCKED=$(lsof /var/lib/dpkg/lock 2>/dev/null | grep -c "/var/lib/dpkg/lock")
      ((WAITCOUNT++))
    done
  fi
  if [ "$WAITCOUNT" -ge "120" ]; then
    echo "Timed out waiting on dpkg lock to clear."
    echo "manually clearing dpkg lock"
    rm -f /var/lib/dpkg/lock
  fi
}

f.prepethos(){
  echo "Download and unpack files needed by ethOS"
  git clone https://github.com/cynixx3/third-party-miner-installer-for-ethos.git -b phoenixminer
  
  mkdir opt/ethos
  rsync -a --delete third-party-miner-installer-for-ethos/opt/ethos opt/ethos
  
#  echo "Check for dependencies"
#  if [ $(dpkg-query -W -f='${Status}' gcc-5 2>/dev/null | grep -c "ok installed") -eq 0 ] ; then
#    echo "Installing dependencies"
#    mkdir depends
#    wget http://security.ubuntu.com/ubuntu/pool/main/g/gcc-5/gcc-5-base_5.4.0-6ubuntu1~16.04.10_amd64.deb -P depends
#    wget http://security.ubuntu.com/ubuntu/pool/main/g/gcc-5/libstdc++6_5.4.0-6ubuntu1~16.04.10_amd64.deb -P depends
#    f.checkdpkg
#    sudo dpkg --configure -a
#    f.checkdpkg
#    sudo dpkg -i depends/*.deb
#  fi
  
  echo "ethOS files ready"
}

f.revert(){
  cd /tmp/newminer
  git clone https://github.com/cynixx3/third-party-miner-installer-for-ethos.git -b ethos-1.3.3
}

f.install(){
  echo "Stopping the miner"
  /opt/ethos/bin/disallow
  /opt/ethos/bin/minestop
  
  echo "Installing miner"
  sudo rsync -a --delete opt/ /opt/
  sudo chown -R ethos.ethos /opt/miners/
  
  echo "Restarting services and miner"
  sudo service ethos-miner-daemon restart
  sudo service ethos-stats-daemon restart
  sudo service ethos-gpu-stats-daemon restart
  /opt/ethos/bin/allow
}

f.cleanup(){
  rm -r /tmp/newminer
}

case "$1" in
  install)
    f.prepminer
    f.prepethos
    f.install
    f.cleanup
  ;;
  update)
    f.prepminer
    f.install
    f.cleanup
  ;;
  revert)
    f.revert
    rm -r /opt/miners/phoenixminer
    f.install
    f.cleanup
  ;;
  *)
    echo $"Usage: $0 {install|update|revert}"
    exit 1
esac
cd ~
